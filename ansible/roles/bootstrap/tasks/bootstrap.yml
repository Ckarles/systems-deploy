---
# if ssh port is reachable, do nothing, else:
# copy ssh pubkey
# modify sshd config
# set sshd port to 2222 and add selinux and firewalld rule
# create current user  and give him root access
# copy ssh pubkey
# reboot the services
#

- name: "Check port {{ ansible_port }}"
  wait_for:
    port: "{{ ansible_port }}"
    state: "started"
    host: "{{ ansible_host }}"
    connect_timeout: "5"
    timeout: "5"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: ssh_port

- name: "Check port 22"
  wait_for:
    port: "22"
    state: "started"
    host: "{{ ansible_host }}"
    connect_timeout: "5"
    timeout: "5"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: ssh_port_default
  when: 
    - ssh_port is defined 
    - ssh_port.state is undefined

- block:
  - name: "Record target SSH port {{ ansible_port }}"
    set_fact:
      target_ssh_port: "{{ ansible_port }}"

  - name: Set SSH port to 22 for initial connexion
    set_fact:
      ansible_port: "22"

  - name: "Set root as remote_user"
    set_fact:
      ansible_user: "root"

  - name: "Set ssh root password"
    set_fact:
      ansible_password: "{{ host_passwords.root }}"

  - name: Gather facts
    setup:

  - name: Setup sshd ClientAlive
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    with_items:
      - { regexp: "^#?TCPKeepAlive", line: "TCPKeepAlive yes" }
      - { regexp: "^#?ClientAliveInterval", line: "ClientAliveInterval 60" }
      - { regexp: "^#?ClientAliveCountMax", line: "ClientAliveCountMax 5" }

  - name: Set ssh port to {{ target_ssh_port }}
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^#?Port "
      line: "Port {{ target_ssh_port }}"
    notify:
      - reload sshd

  - name: Add ssh port {{ target_ssh_port }} in selinux policy
    seport:
      setype: ssh_port_t
      ports: "{{ target_ssh_port }}"
      proto: tcp
      state: present

  - name: Add ssh port {{ target_ssh_port }} in firewalld policy
    command: "firewall-cmd --permanent --service=ssh --{{ item.state }}-port={{ item.port }}"
    with_items:
      - { port: "{{ target_ssh_port }}/tcp", state: "add" }
      - { port: "22/tcp", state: "remove" }
    notify:
      - reload firewalld

  - name: Add a new admin user named {{ user_name }}
    user:
      name: "{{ user_name }}"
      groups: wheel
      password: "{{ user_passwd }}"

  - name: Deploy SSH Key
    authorized_key:
      user: "{{ user_name }}"
      key: "{{ user_pubkey }}"

  - name: Disable password auth
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication no"

  - name: "Allow login for @wheel group only"
    blockinfile:
      path: "/etc/ssh/sshd_config"
      marker: "# {mark} Allow access to certain group only"
      block: |
        AllowGroups wheel

  - name: Disable root login
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "^#?PermitRootLogin"
      line: "PermitRootLogin no"
    notify:
      - reload sshd

  when:
   - ssh_port_default is defined 
   - ssh_port_default.state is defined
