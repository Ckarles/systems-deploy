---

- name: "Install mariadb"
  package:
    name: "mariadb-server, MySQL-python"
    state: "present"

- name: "Start and enable mariadb"
  service:
    name: "mariadb"
    state: "started"
    enabled: yes

- name: "Sets the root password "
  mysql_user:
    user: "root"
    password: "{{ host_passwords.mysql_root }}"
    host: "localhost"
  # TODO: remove ignore_errors=yes and implement that:
  # MySQL server installs with default login_user of ‘root’ and no password. To secure this user as part of an idempotent playbook, you must create at least two tasks: the first must change the root user’s password, without providing any login_user/login_password details. The second must drop a ~/.my.cnf file containing the new root credentials. Subsequent runs of the playbook will then succeed by reading the new credentials from the file.
  ignore_errors: yes

- name: "Deletes anonymous MySQL server user"
  mysql_user:
    login_password: "{{ host_passwords.mysql_root }}"
    user: ""
    host: "{{ ansible_hostname }}"
    state: "absent"

- name: "Deletes anonymous MySQL server user for localhost"
  mysql_user:
    login_password: "{{ host_passwords.mysql_root }}"
    user: ""
    state: "absent"

- name: "Removes the MySQL test database"
  mysql_db:
    login_password: "{{ host_passwords.mysql_root }}"
    db: "test"
    state: "absent"

- name: "Secures the MySQL root user for IPV6 localhost (::1)"
  mysql_user:
    login_password: "{{ host_passwords.mysql_root }}"
    user: "root"
    password: "{{ host_passwords.mysql_root }}"
    host: "{{ item }}"
  loop:
    - "::1"
    - "127.0.0.1"
    - "localhost"
    - "{{ ansible_hostname }}"
